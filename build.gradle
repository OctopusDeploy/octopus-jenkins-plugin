plugins {
  alias(libs.plugins.jenkins)
  alias(libs.plugins.license)
  alias(libs.plugins.spotless)
  id 'maven-publish'
}

group = 'org.jenkins-ci.plugins'
description = 'Octopus Deploy'

defaultTasks 'build', 'checkLicenses', 'jpi'

// Exclude license tasks provided by plugin (see custom tasks 'check-licenses.gradle')
project.gradle.startParameter.excludedTaskNames = [
  'licenseMain',
  'licenseTest',
  'licenseIntegrationTest'
]
apply from: "${rootDir}/gradle/check-licenses.gradle"

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(8)
  }
}

configurations {
  integrationTestImplementation.extendsFrom testImplementation
}

dependencies {
  implementation libs.bundles.octopus
  implementation libs.apache.commons.collections4
  implementation libs.google.gson
  implementation libs.jenkins.workflow
  compileOnly libs.jetbrains.annotations

  testImplementation libs.bundles.junit
  testImplementation libs.assertj.core
  testImplementation libs.mockito.jupiter
  testImplementation libs.mockito.inline
  testImplementation libs.bundles.octopus

  integrationTestImplementation libs.bundles.octopus
  integrationTestImplementation libs.bundles.junit
  integrationTestImplementation libs.assertj.core
  integrationTestImplementation libs.mockito.inline
  integrationTestImplementation libs.mockito.jupiter
  integrationTestImplementation libs.apache.commons.text
}

jenkinsPlugin {
  jenkinsVersion = '2.249.1'
  shortName = 'octopusdeploy'
  displayName = 'Octopus Deploy'
  url = 'https://octopus.com'
  gitHubUrl = 'https://github.com/OctopusDeploy/octopus-jenkins-plugin'
  compatibleSinceVersion = '1.612'
  fileExtension = 'hpi'
  configureRepositories = true

  developers {
    developer {
      id = 'octopusdeploy'
      name = 'Octopus Deploy'
      email = 'support@octopus.com'
    }
  }
}

configurations.all {
  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
  maven { url "https://packages.octopushq.com/artifactory/maven" }
}

spotless {
  groovyGradle {
    target '**/*.gradle'
    greclipse()
    indentWithSpaces(2)
    trimTrailingWhitespace()
    endWithNewline()
  }
}

test {
  useJUnitPlatform()
}

if (file('src/integration-test').directory) {
  sourceSets {
    integrationTest {
      java {
        compileClasspath += main.output
        runtimeClasspath += main.output
        srcDir file('src/integration-test/java')
      }
      resources.srcDir file('src/integration-test/resources')
    }
  }

  task integrationTest(type: Test, dependsOn: ["compileTestJava"]) {
    useJUnitPlatform()
    maxParallelForks = 1 // Consider increasing this when test volume exceeds overhead of docker containers starting
    group = "verification"
    description = "Runs integration tests"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
  }
}

publishing {
  repositories {
    maven {
      url = 'https://packages.octopushq.com/artifactory'
    }
  }
}
